name: assignment
 
trigger:
  branches:
   include:
     - "*"  
  paths:
    include:
      - IAC/**

pr:
- none

pool:
  vmImage: "ubuntu-latest"

# pool:
#   name: ""
#   demands:
#   - Agent.name -equals ""

variables:
  - group: "Infra_variables"

jobs:
  - job: infra_deployment
    displayName: "Infra Deployment"
    steps:
      - task: Checkout@1
        inputs:
          repository: "self"

      - task: TerraformInstaller@0
        inputs:
          terraformVersion: "latest"

      - script: |
          terraform init -reconfigure -backend-config="storage_account_name=$(STORAGE_ACCOUNT_NAME)" -backend-config="container_name=$(CONTAINER_NAME)" -backend-config="key=$(KEY)" -backend-config="resource_group_name=$(RESOURCE_GROUP_NAME)" -backend-config="subscription_id=$(AZURE_SUBSCRIPTIONID)"
          terraform plan -var-file="development.tfvars" -input=false -out=tfplan
        displayName: "Terraform Init & Plan"
        workingDirectory: '$(System.DefaultWorkingDirectory)/IAC'
        enabled: true
        env: 
          ARM_CLIENT_ID: $(CLIENT_ID)
          ARM_CLIENT_SECRET: $(CLIENT_SECRET)
          ARM_TENANT_ID: $(AD_TENANTID)
          ARM_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTIONID)

      - script: |
          terraform init -reconfigure -backend-config="storage_account_name=$(STORAGE_ACCOUNT_NAME)" -backend-config="container_name=$(CONTAINER_NAME)" -backend-config="key=$(KEY)" -backend-config="resource_group_name=$(RESOURCE_GROUP_NAME)" -backend-config="subscription_id=$(AZURE_SUBSCRIPTIONID)"
          terraform apply -auto-approve tfplan
        displayName: "Terraform Apply"
        workingDirectory: '$(System.DefaultWorkingDirectory)/IAC'
        enabled: true
        env: 
          ARM_CLIENT_ID: $(CLIENT_ID)
          ARM_CLIENT_SECRET: $(CLIENT_SECRET)
          ARM_TENANT_ID: $(AD_TENANTID)
          ARM_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTIONID)